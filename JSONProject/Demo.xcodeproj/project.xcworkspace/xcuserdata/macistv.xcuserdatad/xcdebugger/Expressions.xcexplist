<?xml version="1.0" encoding="UTF-8"?>
<VariablesViewState
   version = "1.0">
   <ContextStates>
      <ContextState
         contextName = "PaymentViewController.(validSubscription(UIButton) -&gt; ()).(closure #1):PaymentViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "selectOfferView.customParent">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "RealmServices.serviceFree(title : String) -&gt; Bool:RealmServices.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.realm.object(ofType: BusinessService.self, forPrimaryKey: title as AnyObject).title">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "Field.init(jsonContent : [String : Any]) throws -&gt; Field?:JsonModel_fields.swift">
         <PersistentStrings>
            <PersistentString
               value = "InputType(rawValue: inputJson)">
            </PersistentString>
            <PersistentString
               value = "jsonContent[&quot;fieldType&quot;] as? String ">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "GeneralFormViewController.willMove(toParentViewController : UIViewController?) -&gt; ():GeneralFormViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.person.attributes[5]">
            </PersistentString>
            <PersistentString
               value = "toParentViewController">
            </PersistentString>
            <PersistentString
               value = "self.person.attributes.count">
            </PersistentString>
            <PersistentString
               value = "self.customParent">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "SelectOfferViewController.willMove(toParentViewController : UIViewController?) -&gt; ():SelectOfferViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.person">
            </PersistentString>
            <PersistentString
               value = "!(self.person?.isSaved)!">
            </PersistentString>
            <PersistentString
               value = "self.customParent">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "SetupViewController.(documentPicker(UIDocumentPickerViewController, didPickDocumentAt : URL) -&gt; ()).(closure #1).(closure #1):SetupViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "jsonModel">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "SetupViewController.(documentPicker(UIDocumentPickerViewController, didPickDocumentAt : URL) -&gt; ()).(closure #1):SetupViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "error">
            </PersistentString>
            <PersistentString
               value = "String(data: data!, encoding: .utf8)">
            </PersistentString>
            <PersistentString
               value = "businessService.listOfOptions[1]">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "SelectOfferViewController.goToGeneralFormView(UIButton) -&gt; ():SelectOfferViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.indexOfPreviousSelectedOffer">
            </PersistentString>
            <PersistentString
               value = "self.person.attributes.count">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ExportServices.getSubscribersJSON(_businessServiceTitle : String) -&gt; String:ExportServices.swift">
         <PersistentStrings>
            <PersistentString
               value = "subscriber.serviceOffer?.price">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "AccueilViewController.savePerson(UIButton) -&gt; ():AccueilViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.navigationController">
            </PersistentString>
            <PersistentString
               value = "subViews[7].fieldName">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "CommonField.init(jsonContent : [String : Any]) throws -&gt; CommonField?:JsonModel_fields.swift">
         <PersistentStrings>
            <PersistentString
               value = "jsonContent[&quot;fieldType&quot;]">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "SelectOfferViewController.viewDidLayoutSubviews() -&gt; ():SelectOfferViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "scrollView.contentSize">
            </PersistentString>
            <PersistentString
               value = "view.bounds">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "PaymentViewController.changePaymentWay(CustomSegmentedControl) -&gt; ():PaymentViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "sender.titleForSegment(at: sender.selectedSegmentIndex)">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "Offer.init(jsonContent : [String : Any]) throws -&gt; Offer?:JsonModel_offers.swift">
         <PersistentStrings>
            <PersistentString
               value = "jsonContent[&quot;specificFields&quot;]">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "RealmServices.getBusinessServicesArray() -&gt; [BusinessService]:RealmServices.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.realm">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "PaymentViewController.changePaymentWay(UIButton) -&gt; ():PaymentViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "sender.titleForSegment(at: sender.selectedSegmentIndex)">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "SelectOptionViewController.next(UIButton) -&gt; ():SelectOptionViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.person.serviceOptions[0]">
            </PersistentString>
            <PersistentString
               value = "self.person.serviceOptions[1].description">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ResultatViewController.tableView(UITableView, cellForRowAt : IndexPath) -&gt; UITableViewCell:ResultatViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "services[row].subscribers.count">
            </PersistentString>
            <PersistentString
               value = "String(services[row].subscribers.count)">
            </PersistentString>
            <PersistentString
               value = "cell.detailLabel.text">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "Params.init(jsonContent : [String : Any], inputType : InputType) throws -&gt; Params?:JsonModel_params.swift">
         <PersistentStrings>
            <PersistentString
               value = "jsonContent[&quot;maxLenght&quot;]">
            </PersistentString>
            <PersistentString
               value = "jsonContent[&quot;minLength&quot;]">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ViewController.documentPickerWasCancelled(UIDocumentPickerViewController) -&gt; ():ViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "path">
            </PersistentString>
            <PersistentString
               value = "controller._title">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "GeneralFormViewController.(createViewFromJson(json : JsonModel?) -&gt; ()).(closure #1):GeneralFormViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "field.input">
            </PersistentString>
            <PersistentString
               value = "field.required">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "AccueilViewController.viewWillAppear(Bool) -&gt; ():AccueilViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "realmServices.serviceFree(title: (jsonModel?.title)!)">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "SelectOfferViewController.(createViewFromJson(json : JsonModel?) -&gt; ()).(closure #1):SelectOfferViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "offerButton.tag">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "AccueilViewController.(createViewFromJson(json : JsonModel?) -&gt; ()).(closure #1):AccueilViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "descriptionToLong ? 50 + 20 : 50">
            </PersistentString>
            <PersistentString
               value = "json.icon">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "FileServices.createJSONFileFromString(JSONStringified : String) -&gt; ():FileServices.swift">
         <PersistentStrings>
            <PersistentString
               value = "path">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "AppDelegate.application(UIApplication, didFinishLaunchingWithOptions : [UIApplicationLaunchOptionsKey : Any]?) -&gt; Bool:AppDelegate.swift">
         <PersistentStrings>
            <PersistentString
               value = "tabBarController.navigationController">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "Person.removeAllSpecificFields() -&gt; ():Person.swift">
      </ContextState>
      <ContextState
         contextName = "GeneralFormViewController.createViewFromJson(json : JsonModel?) -&gt; ():GeneralFormViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.person">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "RealmServices.resetlastUsedService() -&gt; ():RealmServices.swift">
      </ContextState>
      <ContextState
         contextName = "GeneralFormViewController.setIndexOfSelectedOffer(index : Int) -&gt; ():GeneralFormViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.indexOfSelectedOffer">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "AccueilViewController.(savePerson(UIButton) -&gt; ()).(closure #1):AccueilViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "textFieldSubViews">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "JsonModel.init(jsonContent : [String : Any]) throws -&gt; JsonModel?:JsonModel.swift">
         <PersistentStrings>
            <PersistentString
               value = "commonField">
            </PersistentString>
            <PersistentString
               value = "commonFieldsJsonArray">
            </PersistentString>
            <PersistentString
               value = "jsonContent[&quot;commonFields&quot;][0]">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "SpecificFormViewController.(createViewFromJson(json : JsonModel?) -&gt; ()).(closure #1):SpecificFormViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "cpt">
            </PersistentString>
            <PersistentString
               value = "offerUsed?.specificFields.count">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "PaymentViewController.removeViewWithTag(tag : Int) -&gt; ():PaymentViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "view.tag">
            </PersistentString>
            <PersistentString
               value = "view.tag == tag">
            </PersistentString>
            <PersistentString
               value = "tag == 2">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "PaymentViewController.validSubscription(UIButton) -&gt; ():PaymentViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.tabBarController?.viewControllers">
            </PersistentString>
            <PersistentString
               value = "self.person">
            </PersistentString>
            <PersistentString
               value = "self.customTabBarController">
            </PersistentString>
            <PersistentString
               value = "customNavigationController?.viewControllers">
            </PersistentString>
            <PersistentString
               value = "self.customNavigationController.viewControllers">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "AccueilViewController.pickerView(UIPickerView, titleForRow : Int, forComponent : Int) -&gt; String?:AccueilViewController.swift">
      </ContextState>
   </ContextStates>
</VariablesViewState>
